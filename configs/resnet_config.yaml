# Configuración para ResNet50 - Clasificación de Privacidad Visual
# Autor: Jennifer Intriago
# Fecha: 2025

project:
  name: "proyecto_privacidad_visual"
  model_name: "resnet50_privacy_classifier"
  description: "Clasificación de imágenes privadas/públicas usando ResNet50 optimizado"
  version: "1.0"

# Configuración del modelo
model:
  architecture: "resnet50"
  backbone: "ResNet50"
  pretrained: true
  weights: "DEFAULT" # ResNet50_Weights.DEFAULT
  num_classes: 2

  # Clasificador personalizado
  classifier:
    layers:
      - type: "BatchNorm1d"
        features: 2048
      - type: "Dropout"
        p: 0.5
      - type: "Linear"
        in_features: 2048
        out_features: 512
      - type: "ReLU"
      - type: "BatchNorm1d"
        features: 512
      - type: "Dropout"
        p: 0.5
      - type: "Linear"
        in_features: 512
        out_features: 2

# Configuración de datos
data:
  input_size: [224, 224]
  batch_size: 32
  num_workers: 2
  pin_memory: true

  # Normalización ImageNet
  normalization:
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]

  # Data Augmentation para entrenamiento
  train_transforms:
    - type: "Resize"
      size: [256, 256]
    - type: "RandomResizedCrop"
      size: 224
      scale: [0.8, 1.0]
    - type: "RandomHorizontalFlip"
      p: 0.5
    - type: "RandomRotation"
      degrees: 15
    - type: "ColorJitter"
      brightness: 0.3
      contrast: 0.3
      saturation: 0.3
      hue: 0.1
    - type: "ToTensor"
    - type: "Normalize"
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]
    - type: "RandomErasing"
      p: 0.5
      scale: [0.02, 0.2]
      ratio: [0.3, 3.3]
      value: 0

  # Transformaciones para validación/test
  val_transforms:
    - type: "Resize"
      size: [224, 224]
    - type: "ToTensor"
    - type: "Normalize"
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]

# Configuración de entrenamiento
training:
  # Estrategia de entrenamiento en dos fases
  strategy: "two_phase"

  # Fase 1: Solo clasificador
  phase1:
    name: "classifier_only"
    epochs: 5
    freeze_backbone: true
    description: "Entrenar solo el clasificador personalizado"

    optimizer:
      type: "AdamW"
      lr: 1e-3
      weight_decay: 1e-4

    scheduler:
      type: "CosineAnnealingLR"
      T_max: 5
      eta_min: 1e-6

  # Fase 2: Fine-tuning completo
  phase2:
    name: "full_finetuning"
    epochs: 15
    freeze_backbone: false
    description: "Fine-tuning de todo el modelo con learning rates diferenciales"

    # Learning rates diferenciales por capa
    optimizer:
      type: "AdamW"
      weight_decay: 1e-4
      layer_lrs:
        conv1: 1e-5
        bn1: 1e-5
        layer1: 2e-5
        layer2: 4e-5
        layer3: 6e-5
        layer4: 8e-5
        fc: 1e-4 # Clasificador con LR más alta
      default_lr: 1e-5

    scheduler:
      type: "CosineAnnealingLR"
      T_max: 15
      eta_min: 1e-7

# Función de pérdida
loss:
  type: "CrossEntropyLoss"
  label_smoothing: 0.1
  use_class_weights: true
  class_weights: "auto" # Se calculan automáticamente

# Métricas de evaluación
metrics:
  primary: "f1_score" # Métrica principal para seleccionar mejor modelo
  track:
    - "accuracy"
    - "precision"
    - "recall"
    - "f1_score"
    - "auc_roc"
    - "loss"

# Configuración de hardware
hardware:
  device: "auto" # "cuda", "cpu", o "auto"
  mixed_precision: false
  benchmark: true

# Guardado de modelos
model_saving:
  save_best: true
  best_metric: "val_f1"
  checkpoint_dir: "results/models/"
  checkpoint_filename: "best_resnet50_privacy_optimized.pth"
  save_every_n_epochs: null

# Configuración de logging y visualización
logging:
  log_every_n_steps: 100
  save_plots: true
  plot_dir: "results/plots/"

  plots:
    - "training_curves"
    - "confusion_matrix"
    - "roc_curve"
    - "sample_predictions"

# Configuración específica para el dataset de privacidad
privacy_dataset:
  classes:
    0: "publica"
    1: "privada"

  # Distribución esperada de clases (para cálculo de pesos)
  class_distribution:
    expected_imbalance: true
    rebalance_strategy: "class_weights"

# Configuración de reproducibilidad
reproducibility:
  seed: 42
  deterministic: true
  benchmark: false

# Configuración de evaluación final
evaluation:
  test_batch_size: 32
  save_predictions: true
  prediction_threshold: 0.5

  # Métricas detalladas para el reporte final
  detailed_metrics:
    - "accuracy"
    - "precision_macro"
    - "precision_binary"
    - "recall_macro"
    - "recall_binary"
    - "f1_macro"
    - "f1_binary"
    - "auc_roc"
    - "confusion_matrix"

# Rutas de archivos
paths:
  data_dir: "/content/drive/MyDrive/data/"
  image_dir: "/content/drive/MyDrive/images/"
  output_dir: "results/"
  checkpoint_dir: "/content/drive/MyDrive/colab_checkpoints/"

# Configuraciones experimentales
experiment:
  name: "resnet50_privacy_v1"
  tags: ["resnet50", "privacy", "binary_classification", "transfer_learning"]
  notes: "Modelo ResNet50 optimizado para clasificación de privacidad con entrenamiento en dos fases"
